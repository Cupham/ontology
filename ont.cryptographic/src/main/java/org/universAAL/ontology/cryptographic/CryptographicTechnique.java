/*******************************************************************************
 * Copyright 2016 Universidad Polit√©cnica de Madrid UPM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
package org.universAAL.ontology.cryptographic;

import org.universAAL.middleware.owl.ManagedIndividual;

/**
 * Ontological representation of CryptographicTechnique in the cryptographic
 * ontology. Methods included in this class are the mandatory ones for
 * representing an ontological concept in Java classes for the universAAL
 * platform. In addition getters and setters for properties are included.
 *
 * @author
 * @author Generated by the OntologyUML2Java transformation of universAAL Studio
 */
public abstract class CryptographicTechnique extends ManagedIndividual {
	public static final String MY_URI = CryptographicOntology.NAMESPACE + "CryptographicTechnique";

	public CryptographicTechnique() {
		super();
	}

	public CryptographicTechnique(String uri) {
		super(uri);
	}

	public String getClassURI() {
		return MY_URI;
	}

	public int getPropSerializationType(String propURI) {
		return PROP_SERIALIZATION_FULL;
	}

	public boolean isWellFormed() {
		return super.isWellFormed();
	}

}
