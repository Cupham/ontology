package org.universAAL.ontology.cryptographic;



/**
 * Ontological representation of SymetricEncryption in the cryptographic ontology. 
 * Methods included in this class are the mandatory ones for representing an
 * ontological concept in Java classes for the universAAL platform. In addition
 * getters and setters for properties are included.
 * 
 * @author 
 * @author Generated by the OntologyUML2Java transformation of AAL Studio
 */
public abstract class SymetricEncryption extends Encryption {
  public static final String MY_URI = CryptographicOntology.NAMESPACE
    + "SymetricEncryption";
  public static final String PROP_SIMPLE_KEY = CryptographicOntology.NAMESPACE
    + "simpleKey";


  public SymetricEncryption () {
    super();
  }
  
  public SymetricEncryption (String uri) {
    super(uri);
  }

  public String getClassURI() {
    return MY_URI;
  }
  
  public int getPropSerializationType(String propURI) {
    if (PROP_SIMPLE_KEY.equals(propURI))
      return PROP_SERIALIZATION_FULL;
    return super.getPropSerializationType(propURI);
  } 

  public boolean isWellFormed() {
	return super.isWellFormed() 
      && hasProperty(PROP_SIMPLE_KEY);
  }

  public SimpleKey getSimpleKey() {
    return (SimpleKey)getProperty(PROP_SIMPLE_KEY);
  }		

  public void setSimpleKey(SimpleKey newPropValue) {
    if (newPropValue != null)
      changeProperty(PROP_SIMPLE_KEY, newPropValue);
  }		

}
